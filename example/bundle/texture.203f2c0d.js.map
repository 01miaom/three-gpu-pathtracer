{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-8b9e408b98a8956d.js","node_modules/@parcel/runtime-js/lib/runtime-85a4739034a9b3c6.js","example/texture.js"],"sourcesContent":["module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"j2Fty\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"c2aSa\\\":\\\"texture.203f2c0d.js\\\",\\\"j2Fty\\\":\\\"Uvrefmap_checker_util-mark.88b9dabf.jpeg\\\",\\\"a9GaN\\\":\\\"aoRender.2d79cbc2.js\\\",\\\"emQ2m\\\":\\\"depthOfField.2b3ff9c8.js\\\",\\\"iGW68\\\":\\\"aoRender.5b603675.js\\\"}\"));","import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, camera, fsQuad;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 3,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.05,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PhysicalCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.camera = camera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new THREE.TextureLoader()\n\t\t.loadAsync( require( './Uvrefmap_checker_util-mark.jpeg' ) )\n\t\t.then( texture => {\n\t\t\t//Test texture params\n\n\t\t\ttexture.repeat.set( 2, 2 );\n\t\t\ttexture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\t\t\t// texture.center.set(0.5, 0.5);\n\t\t\t// texture.rotation = Math.PI / 2;\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.PlaneGeometry( 10, 10 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { map: texture } ),\n\t\t\t);\n\t\t\tfloor.rotation.x = - Math.PI / 2;\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\n\t\t\treturn generator.generate( floor );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tgui.close();\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( camera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( camera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tcamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( camera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( camera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( camera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tcamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'castShadow' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( camera );\n\n\tcamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.material.map = ptRenderer.target.texture;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$ilwiq","$162649dab8e69911$var$renderer","$162649dab8e69911$var$controls","$162649dab8e69911$var$sceneInfo","$162649dab8e69911$var$ptRenderer","$162649dab8e69911$var$camera","$162649dab8e69911$var$fsQuad","$162649dab8e69911$var$envMap","$162649dab8e69911$var$envMapGenerator","$162649dab8e69911$var$scene","$162649dab8e69911$var$samplesEl","$162649dab8e69911$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","matte","castShadow","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","location","hash","includes","$162649dab8e69911$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$162649dab8e69911$var$reset","$162649dab8e69911$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$162649dab8e69911$var$animate","requestAnimationFrame","materials","textures","physicalCamera","updateMatrixWorld","background","i","l","update","samples","render","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","position","set","PathTracingRenderer","alpha","camera","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","TextureLoader","loadAsync","then","repeat","wrapS","wrapT","RepeatWrapping","Mesh","PlaneGeometry","MeshStandardMaterial","rotation","x","PI","geometry","toNonIndexed","clearGroups","result","add","scene","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","close","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","matFolder2","matFolder3","$162649dab8e69911$var$init"],"version":3,"file":"texture.203f2c0d.js.map"}